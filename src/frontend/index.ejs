<!DOCTYPE html>
<html lang="en">
	<head>
		<!-- Meta Tags -->
		<meta charset="UTF-8" />
		<meta http-equiv="X-UA-Compatible" content="IE=edge" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />

		<!-- Fonts -->
		<link rel="stylesheet" href="https://use.typekit.net/tbs8oug.css" />

		<!-- Font Awesome -->
		<script
			src="https://kit.fontawesome.com/2f3d399a99.js"
			crossorigin="anonymous"
		></script>

		<!-- Document Title -->
		<title>Incremental GPS</title>

		<!-- Load Google Map Data -->
		<script
			async
			defer
			src="https://maps.googleapis.com/maps/api/js?key=<%= GOOGLE_MAPS_API_KEY %>&map_ids=b07d0e4dc4f381fb&callback=initMap"
		></script>

		<!-- Render Google Map -->
		<script>
			// Google Maps callback function
			function initMap() {
				// Define origin and destination coordinates
				const origin = '<%= origin %>';
				const destination = '<%= destination %>';
				const route = '<%= route %>';
				// Map options
				var options = {
					zoom: 11,
				};
				// Define map
				var map = new google.maps.Map(
					document.getElementById('map'),
					options
				);
				directionsDisplay = new google.maps.DirectionsRenderer();
				directionsDisplay.setMap(map);

				// Initialize the route
				initRoute(map);
				initMarkers(map, route);

				// Re-Initialize map whenever the window reloads
				google.maps.event.addDomListener(window, 'load', initMap);

				function initRoute(map) {
					directionsService = new google.maps.DirectionsService();
					var request = {
						origin,
						destination,
						travelMode: 'DRIVING',
					};

					directionsService.route(
						request,
						function (response, status) {
							if (status == 'OK') {
								directionsDisplay.setDirections(response);
							} else {
								document.getElementById('status').innerHTML =
									'Unable to find address!';
							}
						}
					);
				}

				function initMarkers(map, route) {
					// Parse through the stringified EJS route
					routeObject = route.replaceAll('&#34;', '"');
					routeObject = JSON.parse(routeObject);
					routeObject = routeObject.route;

					// Loop through the route object and initialize all the markers
					let markers = [];
					for (i = 0; i < routeObject.length; i++) {
						markers.push({
							position: new google.maps.Marker({
								position: new google.maps.LatLng(
									routeObject[i][0],
									routeObject[i][1]
								),
								map,
							}),
						});
					}
					// Set how many coordinate pairs there are
					let count = markers.length;
					let countText = document.getElementById('count');
					countText.innerHTML = count + ' coordinate pairs';

					// Set how many pieces of data to show off
					const exampledata = 5;

					// Create example data
					let data = [];
					for (i = 0; i < exampledata; i++) {
						data.push(routeObject[i]);
					}
					let exampleRoute = {
						route: data,
					};
					let dataText = document.getElementById('data');
					dataText.textContent = JSON.stringify(
						exampleRoute,
						null,
						2
					);
				}
			}
		</script>

		<!-- Styles -->
		<style>
			:root {
				--white: whitesmoke;
				--black: black;
				--blue: cadetblue;
				--gray: #e8e8e8;
			}
			body {
				background-color: var(--white);
				padding: 1rem;
				max-width: 996px;
				margin: auto;
				font-family: neue-haas-grotesk-display, sans-serif;
			}
			@media (min-width: 700px) {
				body {
					display: grid;
					grid-template-columns: 30% 70%;
					padding: 2rem;
				}
				#container {
					padding-left: 3rem;
				}
			}
			#container {
				padding-top: 5rem;
			}
			header {
				width: 100%;
				max-width: 30rem;
			}
			section {
				margin-bottom: 2rem;
			}
			button {
				padding: 0.5rem 1.5rem;
				text-transform: uppercase;
				background-color: var(--blue);
				border-radius: 1rem;
				color: var(--white);
				border: none;
				cursor: pointer;
				border: 1px solid var(--white);
				transition: all ease-in-out 0.15s;
				outline: none;
				margin-top: 1rem;
			}
			button:hover {
				color: var(--blue);
				border: 1px solid var(--blue);
				background-color: var(--white);
				transition: all ease-in-out 0.15s;
			}
			form {
				margin: 2rem 0rem;
			}
			input {
				margin-bottom: 1rem;
				outline: none;
				border: none;
				background-color: transparent;
				border-bottom: black 1px solid;
				width: 100%;
			}
			.code {
				background-color: var(--gray);
				padding: 1rem 2rem;
				font-size: 14px;
				font-family: 'Courier New', Courier, monospace;
			}
			#map {
				height: 20rem;
				width: 100%;
			}
			#status {
				font-weight: bold;
			}
			#count {
				float: right;
				font-weight: bold;
			}
			#github {
				color: var(--black);
			}
		</style>
	</head>
	<body>
		<header>
			<h1>Get incremental GPS Coordinates between two addresses.</h1>
			<p>Tool created by James Worden</p>
			<a href="https://github.com/jamesworden/jamesworden-research">
				<i class="fab fa-github-square fa-2x" id="github"></i>
			</a>
		</header>
		<div id="container">
			<section>
				<h2>Map</h2>
				<div id="count"></div>
				<div id="map"></div>
				<p id="status"></p>
				<p>
					Given an origin and destination address, an array of GPS
					coordinates will be returned. Each coordinate is an array
					itself - the first and seconds points are latitude and
					longitude, respectfully. Get coordinates incrementally
					according to the the 'increment' parameter.
				</p>
				<form id="form">
					<label for="origin">Origin Address</label><br />
					<input
						type="text"
						id="origin"
						name="origin"
						placeholder="<%= origin %>"
					/><br />
					<label for="destination">Destination Address</label><br />
					<input
						type="text"
						id="destination"
						name="destination"
						placeholder="<%= destination %>"
					/><br />
					<label for="increment">
						Increment distance (in meters) </label
					><br />
					<input
						type="number"
						id="increment"
						min="1"
						max="25"
						name="increment"
						placeholder="<%= increment%>"
					/><br />
					<button type="submit">Get route</button>
				</form>
				<p>Http GET request between the two given addresses:</p>
				<div id="http" class="code">
					https://research.jamesworden.com/route?<br />
					origin=<strong><%= origin %></strong><br />
					&destination=<strong><%= destination %></strong><br />
					&increment=<strong><%= increment %></strong>
				</div>
				<p>First 5 coordinate pairs returned by the request above.</p>
				<pre id="data" class="code"></pre>
			</section>
			<section>
				<h2>Documentation</h2>
			</section>
		</div>
	</body>
</html>
