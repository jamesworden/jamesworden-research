<!-- Get google maps data from API -->
<script
	async
	defer
	src="https://maps.googleapis.com/maps/api/js?key=<%= GOOGLE_MAPS_API_KEY %>&map_ids=b07d0e4dc4f381fb&libraries=places&callback=initMap"
></script>

<!-- Create google maps callback function -->
<script>
	// Google Maps callback function
	function initMap() {
		// Define origin and destination coordinates
		const origin = '<%= origin %>';
		const destination = '<%= destination %>';
		const route = '<%= route %>';
		// Map options
		var options = {
			zoom: 11,
		};
		// Define map
		var map = new google.maps.Map(document.getElementById('map'), options);
		directionsDisplay = new google.maps.DirectionsRenderer();
		directionsDisplay.setMap(map);

		// Initialize the route
		initRoute(map);
		initMarkers(map, route);

		// Initialize autocomple on address inputs
		let autocompleteOrigin = new google.maps.places.Autocomplete(
			document.getElementById('origin')
		);
		let autocompleteDestination = new google.maps.places.Autocomplete(
			document.getElementById('destination')
		);

		// Re-Initialize map whenever the window reloads
		google.maps.event.addDomListener(window, 'load', initMap);

		// Initialize route using Google's directions service
		function initRoute(map) {
			// Configure the request to setup the route within the map
			directionsService = new google.maps.DirectionsService();
			var request = {
				origin,
				destination,
				travelMode: 'DRIVING',
			};
			// Get the route
			directionsService.route(request, function (response, status) {
				if (status == 'OK') {
					// Route created
					directionsDisplay.setDirections(response);
				} else {
					// Unable to create route; inform user
					document.getElementById('status').innerHTML =
						'Unable to find address!';
				}
			});
		}
		function initMarkers(map, route) {
			// Parse through the stringified EJS route
			routeObject = route.replaceAll('&#34;', '"');
			routeObject = JSON.parse(routeObject);
			routeObject = routeObject.route;

			// Loop through the route object and initialize all the markers
			let markers = [];
			for (i = 0; i < routeObject.length; i++) {
				markers.push({
					position: new google.maps.Marker({
						position: new google.maps.LatLng(
							routeObject[i][0],
							routeObject[i][1]
						),
						map,
					}),
				});
			}
			// Set how many coordinate pairs there are
			let count = markers.length;
			let countText = document.getElementById('count');
			countText.innerHTML = count + ' coordinate pairs';

			// Set how many pieces of data to show off
			const numCoordinatePairs = 5;

			// Create example data
			let data = [];
			for (i = 0; i < numCoordinatePairs; i++) {
				data.push(routeObject[i]);
			}
			let exampleRoute = {
				route: data,
			};
			let dataText = document.getElementById('data');
			dataText.textContent = JSON.stringify(exampleRoute, null, 2);
		}
	}
</script>
